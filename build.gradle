// available commands:
// "gradle check": run checkstyle to assess code quality
// "gradle clean": clean the project of all derived files
// "gradle build": create the bytecode from the source code
// "gradle run": run the program and produce output

plugins {
    id "java"
}

// declare the repositories that are used to meet dependencies
repositories {
  mavenLocal()
  jcenter()
  mavenCentral()
}

// adds the dependencies needed to compile/run the repository
dependencies {

  // for junit
  compile 'junit:junit:4.12'

  // for commons-math3
  compile 'org.apache.commons:commons-math3:3.2'

  // for commons-lang3
  compile 'org.apache.commons:commons-lang3:3.0'

}

// specify the use of the gradle version
wrapper {
  gradleVersion = '4.9'
}

sourceSets {
  main.java.srcDir "src/main"
  test.java.srcDir "src/test"
}

// declare values to place in the manifest file in the JAR
jar {
  manifest {
    attributes(
        'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
         'Main-Class': 'org.avmframework.AlternatingVariableMethod' // might only be one of a few
        )
  }
}

// give the name of the application to run with "gradle run" command
apply plugin: 'application'
mainClassName = 'org.avmframework.AlternatingVariableMethod' // might only be one of a few

// perform checkstyle checking with the "gradle check" command
apply plugin: 'checkstyle'
checkstyle.toolVersion = '8.1'
checkstyle {
  ignoreFailures = false
  maxWarnings = 0
  maxErrors = 0
  configFile = new File(rootDir, "config/checkstyle/google_checks.xml")
}

// need anything else in this file?
